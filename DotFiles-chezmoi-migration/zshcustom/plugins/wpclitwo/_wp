#compdef wp
#autoload

_brew_installed_formulae() {
  installed_formulae=(`wp user list --field="user_login"`)
}

_command_finish() {
  installed_formulae=(`wp user list --field="user_login"`)
}

# local curcontext="$curcontext" state line _gems _opts ret=1

local -a _user_arguments
_user_arguments=(
  'add-cap:Add a capability for a user.'
  'add-role:Add a role for a user.'
  'create:Create a user.'
  'delete:Delete one or more users from the current site.'
  'generate:Generate users.'
  'get:Get a single user.'
  'import-csv:Import users from a CSV file.'
  'list:List users.'
  'list-caps:List all users capabilities.'
  'meta:Manage user custom fields.'
  'remove-cap:Remove a users capability.'
  'remove-role:Remove a users role.'
  'set-role:Set the user role (for a particular blog).'
  'update:Update a user.'
)

local -a installed_formulae

local -a commands
  # commands=(
  #     'cache:Manage the object cache.'
  #     'cap:Manage user capabilities.'
  #     'cli:Get information about WP-CLI itself.'
  #     'comment:Manage comments.'
  #     'core:Download, install, update and otherwise manage WordPress proper.'
  #     'cron:Manage WP-Cron events and schedules.'
  #     'db:Perform basic database operations.'
  #     'developer:Developer Plugin commands for WP-CLI.'
  #     'eval:Execute arbitrary PHP code after loading WordPress.'
  #     'eval-file:Load and execute a PHP file after loading WordPress.'
  #     'export:Export content to a WXR file.'
  #     'help:Get help on a certain command.'
  #     'import:Import content from a WXR file.'
  #     'media:Manage attachments.'
  #     'menu:List, create, assign, and delete menus'
  #     'network:Unknown'
  #     'option:Manage options.'
  #     'plugin:Manage plugins.'
  #     'post:Manage posts.'
  #     'rewrite:Manage rewrite rules.'
  #     'role:Manage user roles.'
  #     'scaffold:Generate code for post types, taxonomies, etc.'
  #     'search-replace:Search/replace strings in the database.'
  #     'shell:Interactive PHP console.'
  #     'sidebar:Manage sidebars.'
  #     'site:Perform site-wide operations.'
  #     'super-admin:List, add, and remove super admins from a network.'
  #     'term:Manage terms.'
  #     'theme:Manage themes.'
  #     'transient:Manage transients.'
  #     'user:Manage users.'
  #     'widget:Manage sidebar widgets.'
  # )

# commands=(`wp cli completions --line="wp " --point=100`)

  # if (( CURRENT == 2 )); then
    # _describe -t commands 'commands' commands
if (( CURRENT == 2 )); then
  _commands=(`wp cli completions --line="wp $words[2]" --point=100`)
  _describe -t commands 'commands' _commands
fi
if (( CURRENT == 3 )); then
  _commands=(`wp cli completions --line="wp $words[2] $words[3]" --point=100`)
  _describe -t commands 'commands' _commands
fi
if (( CURRENT == 4 )); then
  _commands=(`wp cli completions --line="wp $words[2] $words[3] $words[4]" --point=100`)
  _describe -t commands 'commands' _commands
fi

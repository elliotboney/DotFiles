{{/*
Advanced Chezmoi Template Helpers
Reusable template functions for complex dotfiles scenarios
*/}}

{{/* 
Platform detection helpers 
*/}}
{{- define "is_mac" -}}
{{ eq .chezmoi.os "darwin" }}
{{- end -}}

{{- define "is_linux" -}}
{{ eq .chezmoi.os "linux" }}
{{- end -}}

{{- define "is_arm64" -}}
{{ eq .chezmoi.arch "arm64" }}
{{- end -}}

{{/*
Machine type detection helpers
*/}}
{{- define "is_personal" -}}
true
{{- end -}}

{{- define "is_work" -}}
true
{{- end -}}

{{- define "is_development" -}}
true
{{- end -}}

{{- define "is_server" -}}
{{ .server }}
{{- end -}}

{{/*
Color and formatting helpers for scripts
*/}}
{{- define "colors" -}}
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color
{{- end -}}

{{/*
Logging helpers for scripts
*/}}
{{- define "log_functions" -}}
log_info() { printf "${BLUE}ℹ️  %s${NC}\n" "$*"; }
log_success() { printf "${GREEN}✅ %s${NC}\n" "$*"; }
log_warning() { printf "${YELLOW}⚠️  %s${NC}\n" "$*"; }
log_error() { printf "${RED}❌ %s${NC}\n" "$*"; }
{{- end -}}

{{/*
Command existence check
*/}}
{{- define "command_exists" -}}
command -v {{ . }} >/dev/null 2>&1
{{- end -}}

{{/*
Directory creation helper
*/}}
{{- define "ensure_dir" -}}
if [ ! -d "{{ . }}" ]; then
  mkdir -p "{{ . }}"
  echo "Created directory {{ . }}"
fi
{{- end -}}
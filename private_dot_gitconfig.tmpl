[init]
  templatedir = ~/.git_template
# set your user tokens as enivornment variables, such as ~/.secrets
# See the README for examples.
[color]
  branch = auto
  diff = auto
  status = auto
  ui = true
[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green
[color "diff"]
  commit = yellow
  frag = cyan reverse
  meta = black
  new = green
  old = red
  plain = black
  whitespace = normal red
[alias]
  # add
  a = add                           # add
  aa = add -all
  b = branch -v                     # branch (verbose)
  # commit
  c = commit -m                     # commit with message
  ca = commit --amend
  # checkout
  co = checkout                     # checkout
  nb = checkout -b                  # create and switch to a new branch (mnemonic: "git new branch branchname...")
  # diff
  d = diff                          # diff unstaged changes
  dc = diff --cached                # diff staged changes
  last = diff HEAD^                 # diff last committed change
  # log
  l = log --graph --date=short
  changes = log --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --name-status
  short = log --pretty=format:\"%h %cr %cn %Cgreen%s%Creset\"
  changelog = log --pretty=format:\" %Cgreen*%Creset %s\"
  # remote
  r = remote -v                     # show remotes (verbose)
  # reset
  unstage = reset HEAD              # remove files from index (tracking)
  uncommit = reset --soft HEAD^     # go back before last commit, with files in uncommitted state
  wipe = reset --hard HEAD
  filelog = log -u                  # show changes to a file
  mt = mergetool                    # fire up the merge tool
  deltag = tag -d
  pushtag = push origin :
  delbr = push origin --delete
  # stash
  ss = stash                        # stash changes
  sl = stash list                   # list stashes
  sa = stash apply                  # apply stash (restore changes)
  sd = stash drop                   # drop stashes (destory changes)
  # status
  s = status                        # status
  # tag
  t = tag -n                        # show tags with <n> lines of each tag message
  h = !gitcommandhelp
[format]
  pretty = format:%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(blue)<%an>%Creset
  #pretty = format:%C(blue)%ad%Creset %C(yellow)%h%C(green)%d%Creset %C(blue)%s %C(magenta) [%an]%Creset
[fetch]
  prune = true
[merge]
  summary = true
  verbosity = 1
[apply]
  whitespace = nowarn
[help]
  autocorrect = 1
[branch]
  autosetupmerge = true
[push]
  # 'git push' will push the current branch to its tracking branch
  # the usual default is to push all branches
  default = tracking
[advice]
  statusHints = false
[diff]
  # Git diff will use (i)ndex, (w)ork tree, (c)ommit and (o)bject
  # instead of a/b/c/d as prefixes for patches
  mnemonicprefix = true
[rerere]
  # Remember my merges
  # http://gitfu.wordpress.com/2008/04/20/git-rerere-rereremember-what-you-did-last-time/
  enabled = true
[core]
	excludesfile = ~/.gitignore_global
[include]
  path = .gitconfig.user
[difftool "sourcetree"]
	cmd = /usr/local/bin/ksdiff -w \"$LOCAL\" \"$REMOTE\"
	path = 
[mergetool "sourcetree"]
	cmd = /usr/local/bin/ksdiff --merge --output \"$MERGED\" --base \"$BASE\" -- \"$LOCAL\" --snapshot \"$REMOTE\" --snapshot
	trustExitCode = true
{{- if .personal }}
[ghi]
  repo = nuhabitat/site
	token = !security find-internet-password -a {{ .email }} -s github.com -l 'ghi token' -w
{{- end }}

[user]
	name = {{ if .personal }}Elliot Boney{{ else if .work }}Elliot Boney (Work){{ end }}
	email = {{ .email }}
{{- if .personal }}
[commit]
	template = ~/.stCommitMsg
	gpgsign = true
[tag]
	gpgsign = true
{{- end }}